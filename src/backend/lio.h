/*****  Logical I/O Facility Header File  *****/
#ifndef LIO_H
#define LIO_H

/***************************************
 *****  Task Output Buffer Format  *****
 ***************************************/
/*---------------------------------------------------------------------------
 * A 'Task Output Buffer' is used to buffer the output being produced by a
 * task in the virtual machine.  Because each task processes a number of
 * messages simultaneously in the order best suited to their recipients and
 * not the 'natural' order perceived by the user, output from those messages
 * must be buffered for display in the proper order.  A Task Output Buffer
 * points to an array of 'message slots' for each message being processed by
 * the buffer's associated task.  Each message slot in turn points to a ring
 * of P-Cells containing the output generated by that message in the order
 * that output was generated.  The message slot itself points to the P-Cell
 * containing the most recently generated output.  Starting with that cell,
 * the next P-Cell in the ring contains the first output generated by the
 * message.  The following picture may be worth a thousand words:
 *
 * Executed Code:
 *	LIO_printf (taskOutputBuffer, "The answer is: ");
 *		... intervening output from other messages ...
 *	LIO_printf (taskOutputBuffer, "%d", 17);
 *
 * Task Output Buffer State:
 *	Task			Most
 *	Output	  Message	Recent		Oldest
 *	Buffer	  Rings		Output		Output
 *	------	  -------	-------		-------
 *	 _  Rings   _
 *	|*|------->| |
 *	|-|	   ~ ~
 *	|*|-----+  ~ ~
 *	+-+	|  |-|		------		------------------
 *		+->|*|-------->|*|17\0|<-------|*|The answer is:\0|<----+
 *	   Cursor  |-|		------		------------------	|
 *		   ~ ~		|					|
 *				+---------------------------------------+
 *
 * In addition to message P-Cell output rings, task output buffers contain a
 * standard CPD for the P-Token which defines their positional state and a
 * cursor which simplifies sequential traversal of the output buffer.
 *
 *  Task Output Buffer Field Descriptions:
 *	pToken			- a standard CPD for the positional P-Token of
 *				  this buffer.
 *	cursor			- the offset of the current message ring in
 *				  pcell space to which output is being sent.
 *	rings			- the address array of message rings holding
 *				  the output associated with this buffer.  If
 *				  this field is 'Nil', no output has been
 *				  generated by this task.
 *	diverting		- a boolean value that, when true, indicates
 *				  that the output being collected in this
 *				  buffer is being diverted to a string.
 *---------------------------------------------------------------------------
 */


/***************************
 *****  P-Cell Format  *****
 ***************************/
/*---------------------------------------------------------------------------
 * 'P-Cell's contain atomic units of output.  They are allocated internally
 * from large, simply managed buffers and are threaded together to form
 * printable output images.
 *
 *  P-Cell Field Descriptions:
 *	next			- the offset into pcell space of the next
 *				  P-Cell in the P-Cell ring.  Typically, the
 *				  next P_Cell contains the next piece of
 *				  output generated by a message.  (Note: the
 *				  first P-Cell points to the first message
 *				  in the ring.
 *	content			- a string of arbitrary size (i.e., a null
 *				  terminated array of characters) containing
 *				  the output text held in this P-Cell.
 *				  Although declared as an array of length 1,
 *				  the actual amount of space allocated to a
 *				  P-Cell is determined at run time.
 *---------------------------------------------------------------------------
 */


#endif


/************************** SOURCE FILE HISTORY: ************************/
/************************************************************************
  lio.h 1 replace /users/mjc/rsystem
  860717 17:44:48 mjc Add 'Logical I/O facility

 ************************************************************************/
/************************************************************************
  lio.h 2 replace /users/mjc/rsystem
  860718 14:12:40 mjc Return to library for 'spe'

 ************************************************************************/
/************************************************************************
  lio.h 3 replace /users/mjc/system
  860720 22:22:04 mjc Changed definition of task output buffers

 ************************************************************************/
/************************************************************************
  lio.h 4 replace /users/mjc/translation
  870524 09:39:33 mjc Shortened all identifiers to <= 31 characters

 ************************************************************************/
/************************************************************************
  lio.h 5 replace /users/jad/system
  880706 11:33:12 jad Fix Lio Print Buffer Size

 ************************************************************************/
/************************************************************************
  lio.h 6 replace /users/jad/system
  880805 13:40:45 jad Improve the performance on the PrintOf and SPrint primitives

 ************************************************************************/
